<?xml version="1.0" ?>
<launch>

    <arg name="nicla_name" default="nicla" />
    <arg name="receiver_ip" doc="ignored for serial connection"/>
    <arg name="receiver_port" default="8002" doc="For serial connection, something like '/dev/ttaACM0'"/>
    <arg name="connection_type" doc="tcp, udp, or serial. Serial with micropy not implemented"/>
    <arg name="driver_version" default="arduino" doc="arduino, micropy"/>
    <arg name="baudrate" default="500000" doc="Baudrate for serial connection, ignored for tcp/udp connections"/>

    <arg name="enable_range" default="true" />

    <arg name="enable_camera_raw" default="false" doc="Publish image in the '*/image_raw' topic "/>
    <arg name="enable_camera_compressed" default="true" doc="Publish image in the '*/compressed' topic "/>
    <arg name="camera_receive_compressed" default="false" doc="Set according to COMPRESS_IMAGE arg of the nicla driver. Ignored for TCP and UDP connections. Keep false if bayer pixel format" />
    <arg name="camera_pixel_format" default="rgb565" doc="'rgb565' or 'bayer'. Set according to CAM_PIXFORMAT arg of the nicla driver. Ignored for TCP and UDP connections. Use rgb565 if camera_receive_compressed" />
    <arg name="camera_width" default="320" doc="Set according to CAM_RES arg of the nicla driver. Ignored for TCP and UDP connections" />
    <arg name="camera_height" default="240" doc="Set according to CAM_RES arg of the nicla driver. Ignored for TCP and UDP connections" />
    <arg name="camera_img_rotate_code" default="0" doc="Rotate the image received by the nicla before publishing. 0:no rotation 1,2.3 : 90, 180, 270, clockwise"/>

    <arg name="enable_audio" default="false" />
    <arg name="enable_audio_stamped" default="false" />
    <arg name="enable_audio_recognition_vosk" default="false" doc="Enable speech recognition with VOSK (need to be installed)"/>
    <arg name="audio_recognition_model_path" default="$(find nicla_vision_ros)/vosk_models"/>
    <arg name="audio_recognition_model_name" default="vosk-model-small-en-us-0.15"/>
    <arg name="audio_recognition_listen_seconds" default="2" doc="The speech recognition will process audio blocks of this duration"/>
    <arg name="audio_recognition_grammar" default='[]' 
        doc='VOSK format for grammar, [] to use default model graph 
            or as JSON array of strings like: ["open", "bottle", "cup", "[unk]"]'/>
    <arg name="audio_recognition_wave_output_filename" default="" 
        doc="store detected audio in subsequent files. Absolute path may be included. 
            If not, wav files will be store in .ros folder
            Mostly for debug purposes, leave empty for not storing"/>

    <arg name="enable_imu" default="true" />
    
    <node name="nicla_receiver" pkg="nicla_vision_ros" type="nicla_receiver_ros" output="screen" respawn="false" >
        <param name="nicla_name" value="$(arg nicla_name)" />
        <param name="receiver_ip" value="$(arg receiver_ip)" />
        <param name="receiver_port" value="$(arg receiver_port)" />
        <param name="connection_type" value="$(arg connection_type)" />
        <param name="driver_version" value="$(arg driver_version)" />
        <param name="baudrate" value="$(arg baudrate)" />

        <param name="enable_range" value="$(arg enable_range)" />
        <param name="enable_camera_raw" value="$(arg enable_camera_raw)" />
        <param name="enable_camera_compressed" value="$(arg enable_camera_compressed)" />
        <param name="camera_receive_compressed" value="$(arg camera_receive_compressed)" />
        <param name="camera_pixel_format" value="$(arg camera_pixel_format)" />
        <param name="camera_width" value="$(arg camera_width)" />
        <param name="camera_height" value="$(arg camera_height)" />
        <param name="camera_img_rotate_code" value="$(arg camera_img_rotate_code)" />
        <param name="enable_audio" value="$(arg enable_audio)" />
        <param name="enable_audio_stamped" value="$(arg enable_audio_stamped)" />
        <param name="enable_audio_recognition_vosk" value="$(arg enable_audio_recognition_vosk)" />
        <param name="audio_recognition_model" value="$(arg audio_recognition_model_path)/$(arg audio_recognition_model_name)" />
        <param name="audio_recognition_listen_seconds" value="$(arg audio_recognition_listen_seconds)" />
        <param name="audio_recognition_grammar" value="$(arg audio_recognition_grammar)" />
        <param name="audio_recognition_wave_output_filename" value="$(arg audio_recognition_wave_output_filename)" />
        <param name="enable_imu" value="$(arg enable_imu)" />
    </node>

</launch>
